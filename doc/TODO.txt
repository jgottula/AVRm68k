Priorities:
- Replace SIMM
  - Rewrite read & write with correct timings and other things
  - Implement fast page mode functions for accessing words and longs
  - Implement read-modify-write (for incrementing memory locations, etc)
- Emulator: memory system
- Emulator: addressing modes
- Emulator: instructions
  - Next: clr, cmp, eor, or, and
- SD
  - Because of no card detect, throw fatal error upon early init problems
- Linux from scratch
- Bootloader
- HDD driver
- RTC chip for date/time

Tests:
- m68k_mem: read and write, for all sizes
- Address modes:
  - Data reg direct
  - Addr reg direct
  - Addr reg indirect
  - Addr reg indirect post incr
  - Addr reg indirect pre decr
  - Addr reg indirect displacement
  - Addr reg indirect index
  - Addr reg indirect index base displacement
  - Memory indirect postindex
  - Memory indirect preindex
  - PC indirect displacement
  - PC indirect index
  - PC indirect index base displacement
  - PC memory indirect postindex
  - PC memory indirect preindex
  - Absolute short
  - Absolute long
  - Immediate

Optimizations:
- Remember to BENCHMARK/PROFILE all optimizations for determining efficacy
- Implement icache and/or dcache (internal ram and/or sram)
- Use fast page mode to read WORD or LONG values from dram
- Implement DMA using second microcontroller such as ATtiny13 (for cache
  writeback to DRAM, or SD writes, or for buffered asynchronous serial, etc)
- Remove debug code

Program size:
- Use decompressor stub + compressed code?

Overclocking:
- Get power as 12V (or 7.4V) and use another LM317 to get >5V
  - Or, use boost converter (more expensive/difficult)
  - This needs to be VERY precise
- Check that all TTL components (i.e. those not buffered with 4050) can
  withstand the overvolt
  - ATmega324A: abs max 6V, 5.5V reasonable
  - OWC DRAM: abs max 7V, 5.5V reasonable
  - MAX232: abs max 6V, 5.5V reasonable
  - FT232R: don't want to touch this
- Check that 3.3V outputs from SPI devices will actually register above the Vih
  threshold of the AVR (5.5-6V WILL be a problem)
  - Check if 4050 with Vcc 5V will actually pull 3.3V up to 5V
    - Alt: use bipolar discretes?
- Will need to buffer the UART tx line to 5V using 4050 (if using FTDI chip)
- It may be possible to use the ADC to track Vcc
