Priorities:
- Implement dram read-modify-write (for incrementing memory locations, etc)
- Emulator: MMU!
- Emulator: memory system
  - Use fpm for words and longs
  - Use rmw for increments, etc. (requires not doing the initial read in the
    instruction)
- Emulator: instructions
- Emulator: emu instructions
  - dumpstack
- SD card
  - Because of no card detect, throw fatal error upon early init problems
- Linux from scratch
- Bootloader
- HDD driver
- RTC chip for date/time
- Colored output (use 033, followed by "[<attr>;<attr>;<attr...>m")

Tests:
- Address modes:
  - Immediate modes look broken!
  - Addr reg indirect index
  - Addr reg indirect index base displacement
  - Memory indirect postindex
  - Memory indirect preindex
  - PC indirect index
  - PC indirect index base displacement
  - PC memory indirect postindex
  - PC memory indirect preindex
- Instructions:
  - pea (check stack)
  - jmp, jsr, bra, bsr (check stack)
  - all 16 conditional codes
  - tst (cond codes)
  - addq (all cond codes)
  - and/exg instr bits
  - or/sbcd instr bits
  - eor/or interaction

Optimizations:
- Remember to BENCHMARK/PROFILE all optimizations for determining efficacy
- Implement icache and/or dcache (internal ram and/or sram)
- Use fast page mode to read WORD or LONG values from dram
- Implement DMA using second microcontroller such as ATtiny13 (for cache
  writeback to DRAM, or SD writes, or for buffered asynchronous serial, etc)
- Reorder if/else statements so more likely instructions etc are first
- Remove debug code
